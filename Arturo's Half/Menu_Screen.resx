<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAASIAAABdCAMAAAA2Y5skAAAABGdBTUEAALGPC/xhBQAAAvdQTFRF5d14
        AAAA6+WXx8Bo9fLK+fjg9/TT9PHG6uSR6eOO6OGI5+CB599+5t578+/A9/XW7Oaa+PbZ+ffc9fPN9vPQ
        6eKL2djF6uWU9PDD7eed5t547umk5+GE7eR8yMFp8e666uF68Oux6OCE7+mn8ey06N957+qq8u+96+N7
        8e236OB68/DD7+uu7eegBwYE7eigDQ0IBAQC8eh+7eee6+WU7eeh8+697eih6OKLjolK3NRzSEUlFBMN
        2tjFWlcv/vrGERAK6OGECgoG39d18OqtsKpc8+uA7+d99vTQIB8X4tp29vPN3dV0+ffd7uV8zsdsvrdj
        GRgS+PbaiINHPjwgHRwPGxsP3diYkY1M+/fD9vK/Z2M2LCsX+PXX9fC2VVM+hoJGhH9FJCMb5Nx42dJy
        1s5wmpdwzMVrw7xmMTAkLCsg8+6uysaMKSgVFhYM0s6aysNqiodig4Bgop1Vi4ZJREIk//vH/fnF9PC9
        +fS11NGj2dSXvLVilZBOUk8rQkAiMzEa+/a8/Pex+PKu/Pan5eCg0MyRqKJYmJNQamhMUE47RUQyPz0t
        JSQT+PTC9/O6w7+T1tGS9eyA8up/0stupZ9WV1QtNzYoS0gnKCcd8+616+ezyMSJ0Mltjotogn1EdnI9
        Skk3XloxISASGhkN/vu+//u5/Pe48ey34t6u5+Kt9fCk4Nyj6eOiv7uKurNhdnNWZGJKbWk5Ly4Z//3C
        6+ahzcmbysaUuraJwLllradan5lTaWY3YV4zXFgwT0wpNjQcHR0V2djG7Oes29em496c29aSkY5oiIVn
        t7BgWlhDcW07Tkw3Ojge2Na68e2z1tOv7+qpzsqMw7+KtbKJpaF6op9ycW5R6eSotK1enJZSYF5FfXhB
        ZGE0QD4h8+668euu8eqdvbqTqKWArqp9t7N8zMZ5f3tCXVtBe3ZARkQlzsmGrquEn5trfXpde3lX///J
        /vrF8+637eab5N+YzceAy8RyeXQ/2tjG2tfGvr2sh4NHeHVAnqurDAAAFmRJREFUeF7tW3d4U1eWfyfM
        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
</value>
  </data>
</root>